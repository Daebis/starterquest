import { EquipType, FacingDirection } from "Enums";
import { IContainer, IItem } from "item/IItem";
import { Message, MessageType } from "language/Messages";
import Mod from "mod/Mod";
export default class StarterQuest extends Mod {
    private quests;
    private dialog;
    private container;
    private inner;
    private containerName;
    private containerDescription;
    private containerProgress;
    private containerCompleteButton;
    private containerBackButton;
    private containerSkipButton;
    private containerCloseButton;
    private keyBind;
    private data;
    private globalData;
    private messageQuestCompleted;
    private messageQuestProgressItemCollected;
    private messageQuestProgressEquipped;
    private messageQuestProgressFinished;
    private messageQuestProgressCompleted;
    onInitialize(saveDataGlobal: any): any;
    onLoad(saveData: any): void;
    onSave(): any;
    onUnload(): void;
    onGameStart(isLoadingSave: boolean, playedCount: number): void;
    onShowInGameScreen(): void;
    onButtonBarClick(buttonName: string): void;
    onKeyBindPress(keyBind: number): boolean;
    onInventoryItemAdd(item: IItem, container: IContainer): void;
    onInventoryItemRemove(item: IItem, container: IContainer): void;
    onInventoryItemUpdate(item: IItem, container: IContainer): void;
    onItemEquip(item: IItem, equip: EquipType): void;
    onTurnComplete(): void;
    onMoveDirectionUpdate(direction: FacingDirection): void;
    onDisplayMessage(message: Message, messageType?: MessageType, ...args: any[]): boolean;
    updateDialog(): void;
    updateProgress(): void;
    updateQuestDoodads(): boolean;
    onCompleteQuestClick(): void;
    setQuest(questNumber: number): void;
    onQuestChanged(): void;
    isQuestCompletable(): boolean;
}
