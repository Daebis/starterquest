import { EquipType, FacingDirection } from "Enums";
import { IContainer, IItem } from "item/IItem";
import { Message, MessageType } from "language/Messages";
import Mod from "mod/Mod";
import { BindCatcherApi } from "newui/BindingManager";
import { IPlayer } from "player/IPlayer";
export default class StarterQuest extends Mod {
    private quests;
    private button;
    private dialog;
    private container;
    private inner;
    private containerName;
    private containerDescription;
    private containerProgress;
    private containerCompleteButton;
    private containerBackButton;
    private containerSkipButton;
    private containerCloseButton;
    private keyBind;
    private data;
    private globalData;
    private dictionary;
    private messageQuestCompleted;
    private messageQuestProgressItemCollected;
    private messageQuestProgressEquipped;
    private messageQuestProgressFinished;
    private messageQuestProgressCompleted;
    onInitialize(saveDataGlobal: any): any;
    onLoad(saveData: any): void;
    onSave(): any;
    onUnload(): void;
    onGameStart(isLoadingSave: boolean, playedCount: number): void;
    onShowInGameScreen(): void;
    onButtonBarClick(button: JQuery): void;
    onBindLoop(bindPressed: true | undefined, api: BindCatcherApi): true | undefined;
    onInventoryItemAdd(player: IPlayer, item: IItem, container: IContainer): void;
    onInventoryItemRemove(player: IPlayer, item: IItem, container: IContainer): void;
    onInventoryItemUpdate(player: IPlayer, item: IItem, container: IContainer): void;
    onItemEquip(player: IPlayer, item: IItem, equip: EquipType): void;
    onTurnEnd(player: IPlayer): void;
    onMoveDirectionUpdate(player: IPlayer, direction: FacingDirection): void;
    onDisplayMessage(message: Message, messageType?: MessageType, ...args: any[]): boolean;
    updateDialog(): void;
    updateProgress(): void;
    updateQuestDoodads(): boolean;
    onCompleteQuestClick(): void;
    setQuest(questNumber: number): void;
    onQuestChanged(): void;
    isQuestCompletable(): boolean;
}
